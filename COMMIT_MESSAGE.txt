feat: Add production-ready authentication system

Major Features:
- Implemented Supabase Auth for secure user authentication
- Added JWT token-based API protection throughout backend
- Implemented Row Level Security (RLS) for user data isolation
- Created signup, signin, and signout user flows
- Added authentication UI screens with proper error handling
- Implemented session persistence across app restarts
- Configured database triggers for automatic user profile creation

Backend Changes:
- Updated auth middleware to validate Supabase JWT tokens
- Replaced test user authentication with real token verification
- Added proper user authentication endpoints
- Fixed CORS to allow all origins in development
- Added getPage endpoint for individual page fetching
- Updated server to listen on all network interfaces (0.0.0.0)

Frontend Changes:
- Created AuthContext for global auth state management
- Added signin and signup screens with validation
- Updated settings screen with user profile and signout
- Implemented protected routing (redirects unauthenticated users)
- Integrated API service with authentication tokens
- Added loading states during auth check

Database Changes:
- Removed password_hash from users table (Auth handles passwords)
- Added database trigger to auto-create user profiles on signup
- Implemented Row Level Security policies for all tables
- Users can only access their own projects and pages

Security:
- Passwords never stored in application database
- Supabase handles bcrypt hashing and salting
- JWT tokens validated on every API request
- Row Level Security prevents unauthorized data access
- Session tokens stored securely in AsyncStorage

Documentation:
- Added AUTH_IMPLEMENTATION.md with setup instructions
- Added PRODUCTION_AUTH_SETUP.md with deployment guide
- Added DEPLOYMENT_CHECKLIST.md for GitHub push prep
- Updated backend env.example with Supabase variables
- Added production_schema.sql and auth_trigger.sql

Testing Completed:
✅ User signup and signin
✅ Session persistence across app restarts
✅ Data isolation between users
✅ API authentication with JWT tokens
✅ Sign out functionality
✅ Protected routes and navigation
✅ Project and page creation with auth
✅ AI text extraction with authenticated requests

Ready for:
- User testing with ngrok or deployment
- Adding OAuth providers (Google, GitHub, etc.)
- Production deployment to Railway/Vercel
- Custom domain configuration

Architecture:
- Frontend → Supabase Auth (authentication)
- Frontend → Backend API (with JWT validation)
- Backend → Supabase Database (with RLS)
- Enterprise-grade, scalable, production-ready

